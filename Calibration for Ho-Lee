
#This code is developed as part of the Summative Assignemt at
#London School of Economics and Political Sciences.
#The code cannot be copied, run or reproduced without the written consent of the author for any other purpose.

####### QUESTION 1 ########

#Importing the yield curve from an excel file
library(readxl)
filepath<-"~/Google Drive/FINANCE LSE/Fixed Income Securities/Summative assignment/yieldcurve.xlsx"
yieldcurve <- read_xlsx(filepath, sheet = "4. spot curve",col_names=FALSE)[c(-1,-3:-4),-1]


#Plotting the yieldcurve
yieldcurve<-t(yieldcurve)
maturities<-yieldcurve[,1]
plot(yieldcurve,main="02 January 2019",xlab="Years",ylab="Yield Curve",type="l",col="blue")


#Define function to calculate zero coupon bonds
ZCB_Calculator<-function(yield, notional, compoundingperiods, maturity){
  ZCB<-exp(-yield*maturity)*notional
}


#Calculating the Zero Coupon Bonds for the given yieldcurve
ZCB<-yieldcurve
for (i in 1:(nrow(yieldcurve))){
  ZCB[i,2]<-ZCB_Calculator(yieldcurve[i,2]/100,1,2,yieldcurve[i,1])
}


#Plotting the ZCB curve
plot(ZCB,main="Zero Coupon Bonds",xlab="Years",ylab="ZCB",type="l",col="red")


#Define function for the Ho-Lee Tree
Ho_Lee_Tree<-function(yields,delta,vol,theta){
  HLT<-matrix(ncol=nrow(yields)+1,nrow=nrow(yields)+1)
  HLT[1,1]<-yields[1,2]/100
  for (i in 1:(nrow(yieldcurve))){
    for (j in 1:(i+1)){
      if (j==1){
        HLT[j,i+1]<-HLT[j,i]+theta[i]*delta+vol*sqrt(delta)
      } else {
        HLT[j,i+1]<-HLT[j-1,i]+theta[i]*delta-vol*sqrt(delta)
      }
    }
  }
  return(100*HLT)
}


#Choosing a vector of 0s for initial theta values
theta<-rep(0,length(yieldcurve[,2]))


#Building the Trees with the parameters from the assignment and theta
HLT<-Ho_Lee_Tree(yieldcurve,0.5,0.0173,theta)
BDTT<-BDT_Tree(yieldcurve,0.5,0.2142,theta)


#Define function to derive Zero Coupon Bond Prices for a given Interest Rate Tree
ZCB_Model<-function(IRTree,q,delta,maturities){
  ZCB_Tree<-matrix(0,ncol=ncol(IRTree)+1,nrow=nrow(IRTree)+1)
  ZCB_Tree[1,1]<-1
  ZCB_Model<-c()
  for (i in 2:nrow(ZCB_Tree)){
    for (j in 1:i){ 
      if (j==1){
        ZCB_Tree[j,i]<-q*ZCB_Calculator(IRTree[j,i-1]/100,ZCB_Tree[j,i-1],1,delta)
      } else if (j>1 && j<i){
        ZCB_Tree[j,i]<-q*ZCB_Calculator(IRTree[j,i-1]/100,ZCB_Tree[j,i-1],1,delta)+
          (1-q)*ZCB_Calculator(IRTree[j-1,i-1]/100,ZCB_Tree[j-1,i-1],1,delta)
      } else if (j==i){
        ZCB_Tree[j,i]<-(1-q)*ZCB_Calculator(IRTree[j-1,i-1]/100,ZCB_Tree[j-1,i-1],1,delta)
      }
    }
  }
  ZCB_Model<-colSums(ZCB_Tree)
  ZCB_Model<-data.frame(append(maturities,(maturities[length(maturities)]+maturities[1])),ZCB_Model[-1])
  return(ZCB_Model)
}


#Define the function to calculate the yieldcurve from the Interest Rate Tree model
Model_Curve<-function(ZCB,maturities){
  Yields<-c()
  for (i in 1:nrow(ZCB)){
    Yields[i]<- (-log(ZCB[i,2])/ZCB[i,1])*100
  }
  Yields<-data.frame(append(maturities,(maturities[length(maturities)]+maturities[1])),Yields)
  return(Yields)
}


#Calculate square roots of differences
Square_Diff<-function(Curve1,Curve2){
  Square_Diff<-c()
  for (i in 1:nrow(Curve1)){
    Square_Diff[i]<-(Curve1[i,2]-Curve2[i,2])^2
  }
  return(Square_Diff)
}


#Square Error calaculation function for optimal theta calculation
Model_Error<-function(theta1, yields, ZCB, delta, vol, q, maturities,model){
  if (model=="HLT") {
    HLT<-Ho_Lee_Tree(yields,delta,vol,theta1)
    HL_ZCB<-ZCB_Model(HLT,q,delta, maturities)
    HL_Yieldcurve<-Model_Curve(HL_ZCB,maturities)
    SD<-Square_Diff(yields, HL_Yieldcurve)
    
  } else if (model=="BDT"){
    BDT<-BDT_Tree(yields,delta,vol,theta1)
    BDT_ZCB<-ZCB_Model(BDT,q,delta, maturities)
    BDT_Yieldcurve<-Model_Curve(BDT_ZCB,maturities)
    SD<-Square_Diff(yields, BDT_Yieldcurve)
  }
  return(sum(SD))
}


#Calculation of the optimal theta values for the two models
Optimum_Theta_HLT_results<-optim(par=theta,Model_Error,yields=yieldcurve,ZCB=ZCB, delta=0.5,
                                vol=0.0173,q=0.5,maturities=maturities,model="HLT",method="BFGS")
Optimum_Theta_HLT<-Optimum_Theta_HLT_results$par
Optimum_Theta_HLT


#Building the new calibrated trees for the two models
HLT_Calibrated<-Ho_Lee_Tree(yieldcurve,0.5,0.0173,Optimum_Theta_HLT)

#Population of the ZCB for all maturities deriving from the two calicrated trees
HL_ZCB<-ZCB_Model(HLT_Calibrated,0.5,0.5, maturities)
plot(HL_ZCB,main="Ho-Lee Zero Coupon Bonds",xlab="Years",ylab="ZCB",type="l",col="red")

#Population of the yieldcurves deriving form the two models
HL_Yieldcurve<-Model_Curve(HL_ZCB,maturities)
plot(HL_Yieldcurve,main="Ho-Lee Yieldcurve",xlab="Years",ylab="Calibrated Ho-Lee Yields",
     type="l",col="blue")

